[include]
	path = gitconfig.d/user.gitconfig
	path = gitconfig.d/wsl-credential-helper.gitconfig
	path = gitconfig.d/credential-helper.gitconfig
	path = gitconfig.d/gpg-signing-key.gitconfig
	path = gitconfig.d/kde.gitconfig

[core]
	editor = nvim
	askpass = /usr/bin/ksshaskpass

# reuse recorded resolution (when redoing a rebase it keeps older merge conflict resolutions)
[rerere]
	enabled = true

[credential]
	useHttpPath = true

[push]
	default = current
	autoSetupRemote = true
	followTags = true

[pull]
	default = current
	ff = only

[alias]
	ci = commit -v
	co = checkout
	st = status
	br = branch
	df = diff
	lg = log -p
	who = shortlog -s --
	rb = rebase
	cp = cherry-pick
	sub = submodule update --init --recursive
	dd = diff --cached
	lc = config --list --show-origin
	change-commits = "!f() { VAR=$1; OLD=$2; NEW=$3; shift 3; git filter-branch --env-filter \"if [[ \\\"$`echo $VAR`\\\" = '$OLD' ]]; then export $VAR='$NEW'; fi\" $@; }; f" # https://stackoverflow.com/questions/2919878/git-rewrite-previous-commit-usernames-and-emails git change-commits GIT_AUTHOR_NAME "old name" "new name" (or GIT_AUTHOR_EMAIL)

[color]
	ui = true

[help]
	autoCorrect = 20

[init]
	defaultBranch = master

[filter "lfs"]
	process = git-lfs filter-process
	required = true
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f

