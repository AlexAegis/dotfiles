#!/bin/sh

# watches directories provided by -d parameters and everytime a notification
# happens, it executes every -e parameter with eval
# It also resolves symlinks!

# for argument parsing
IFS=' '

parse_args() {
	/usr/bin/getopt -o "ted" -l "target,exec,delay" -- "$@" || exit 1
}

TARGET=
EXEC=
DELAY=

for arg in $(parse_args "$@"); do
	case $arg in
		-t | --target)
			if [ -d "$2" ]; then
				if [ $TARGET ]; then
					TARGET="$TARGET
$2"
				else
					TARGET="$2"
				fi
			else
				echo "${C_RED} Invalid target: $2${C_RESET}"
				exit 1
			fi
			shift 2
			;;
		-e | --exec)
			if [ "$2" ]; then
				if [ $EXEC ]; then
					EXEC="$EXEC
$2"
				else
					EXEC="$2"
				fi
			else
				echo "${C_RED} Invalid exec: $2${C_RESET}"
				exit 1
			fi
			shift 2
			;;
		-d | --delay)
			if [ "$2" ]; then
				DELAY="$2"
			else
				echo "${C_RED} Invalid delay${C_RESET}"
				exit 1
			fi
			shift 2
			;;
		--)	;;
		-?*)
			printf 'WARN: Unknown option (ignored): %s\n' "$1" >&2
			;;
		*) # Installs modules specified after it
			break
			;;
	esac
done


wait_notification() {
	/usr/bin/inotifywait -q \
	-e delete \
	-e delete_self \
	-e move \
	-e moved_to \
	-e moved_from \
	-e modify \
	-e attrib \
	"$@"
}

# symlink is added
#shellcheck disable=SC2086


# for lists with elements with spaces
IFS='
'
#shellcheck disable=SC2086
while :; do
	# freshly calculating the target so newly added symlinks are resolved too
	TARGET=$(/usr/bin/find $TARGET -maxdepth 3 -exec /usr/bin/readlink -f {} \;)
	wait_notification $TARGET

	[ $DELAY ] && sleep $DELAY
	echo "Notification! Execute all: $EXEC"
	for exe in $EXEC; do
		echo "exe $exe"
		eval "$exe"
	done
done

echo 'Watch exec terminated'
