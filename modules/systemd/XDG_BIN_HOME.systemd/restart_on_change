#!/bin/sh

# Uses systemctl $COMMAND (restart by default) on every -s service when any of
# the -d directories change. Also follows symlinks!

# for argument parsing
IFS=' '

parse_args() {
	/usr/bin/getopt -o "sdur" -l "service,directory,user,root" -- "$@" || exit 1
}

TARGET=
SERVICE=
USER='--user'
COMMAND='restart'

for arg in $(parse_args "$@"); do
	case $arg in
		-u | --user) USER='--user' ;;
		-r | --root) USER='' ;;
		-c | --command)
			if [ "$2" ]; then
				COMMAND="$2"
			else
				echo "${C_RED} Invalid command: $2${C_RESET}"
				exit 1
			fi
			shift 2
			;;
		-d | --directory)
			if [ -d "$2" ]; then
				TARGET="$TARGET -d $2"
			else
				echo "${C_RED} Invalid target: $2${C_RESET}"
				exit 1
			fi
			shift 2
			;;
		-s | --service)
			if [ "$2" ]; then
				SERVICE="$SERVICE -e '/usr/bin/systemctl $USER $COMMAND $2'"
			else
				echo "${C_RED} Invalid service: $2${C_RESET}"
				exit 1
			fi
			shift 2
			;;
		--)	;;
		-?*) printf 'Unknown option (ignored): %s\n' "$1" >&2 ;;
		*)
			printf 'wat option (ignored): %s\n' "$@" >&2
			break ;;
	esac
done

eval "$XDG_BIN_HOME/watch_exec $TARGET $SERVICE"

echo "Restart on change terminated"
